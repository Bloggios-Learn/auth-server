spring:
  application:
    name: auth-server # Application name
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVER} # Kafka Broker host and port
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      auto-offset-reset: latestI want
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: com.bloggios.auth.provider
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DATABASE}?currentSchema=auth-provider
    hikari:
      username: ${POSTGRES_USERNAME} #Postgres Database username
      password: ${POSTGRES_PASSWORD} #Postgres Database password
      maximum-pool-size: ${POSTGRES_POOL_SIZE:100}
      minimum-idle: ${POSTGRES_IDLE:7}
      leak-detection-threshold: 120000
      max-lifetime: 1800000
      idle-timeout: 600000
      connection-timeout: 600000
  jpa:
    hibernate:
      ddl-auto: update # To automatically create and update tables

application:
  version: @version@ #Fetching version from pom.xml